-- Entity definitions --
-- Use ALWAYS "Long" as type for integer types --

-- 1:N, N:N both mono-directional sample

--Fan(
--Nickname string
--Name string
--Surname string
--Age long
--) Fans - UNIQUE<Nickname>

--Location(
--City string
--Province string
--Address string
--) Locations - UNIQUE<City>

--Concert(
--Code string
--ArtistName string
--Data date
--Genre string
-- 1:N - 1 location can accommodate N concerts
--Location FK REFERENCES Location
--) Concerts - UNIQUE<Code>

-- Relations --
-- Project this table definition in case of N:N relation
-- Create Fans_Concerts table

--N:N-mono<Fan, Concert> {
--	Fans_Concerts(
--		Fan FK REFERENCES Fan
--		Concert FK REFERENCES Concert
--		) Fans_Concerts - PRIMARY KEY<Fan, Concert>
--}

-- 1:N - 1 location can accommodate N concerts (FK)
--1:N-mono<Location, Concert> {
--}

-- two 1:N mono-directional sample --

--Venditore(
--cf string
--nome string
--cognome string
--) Venditori - UNIQUE<cf>

--Vendita(
--Costo double
--Data date
--Venditore FK REFERENCES Venditore
--) Vendite

--Prodotto(
--SerialNumber string
--Descrizione string
--Vendita FK REFERENCES Vendita
--) Prodotti - UNIQUE<SerialNumber>

-- Relations

--1:N-mono<Venditore, Vendita> {
--}

--1:N-mono<Vendita, Prodotto> {
--}

-- N:N mono-directional sample --

--Corso(
--Codice long
--Titolo string
--CreditiFormativi long
--NomeDocent string
--) Corsi - UNIQUE<Codice>

--Studente(
--Matricola string
--Nome string
--Cognome string
--Sesso boolean
--DataNascita Date
--) Studenti - UNIQUE<Matricola>

--Relation

--N:N-mono<Corso, Studente> {
--	Corso_Studente (
--		Corso FK REFERENCES Corso
--		Studente FK REFERENCES Studente
--	) Corsi_Studenti - PRIMARY KEY<Corso, Studente>
--}

-- N:N bidirectional sample --

--Party(
--Title string
--Place string
--Data date
--) Parties - UNIQUE<Title>

--Partecipant(
--Nickname string
--Name string
--Surname string
--Age Long
--) Partecipants - UNIQUE<Nickname>

--N:N-bi<Party, Partecipant> {
--	Party_Partecipant(
--		Party FK REFERENCES Party
--		Partecipant FK REFERENCES Partecipant
--	) Parties_Partecipants - PRIMARY KEY<Party, Partecipant>
--}

-- 1:N bidirectional sample --

-- Venditore(
-- cf string
-- nome string
-- cognome string
-- ) Venditori - UNIQUE<cf>

-- Vendita(
-- Costo double
-- Data date
-- Venditore FK REFERENCES Venditore
-- ) Vendite

-- 1:N-bi<Venditore, Vendita> {
-- }

-- Tavolo(
--	Numero long
--	Capienza long
-- ) Tavoli - UNIQUE<Numero>

-- PrenotazioneRistorante(
--	Cognome string
--	Data date
--	NumPersone long
--	Cellulare string
--	Tavolo FK REFERENCES Tavolo
-- ) Prenotazioni_Ristorante - UNIQUE<Cognome, Data> & UNIQUE <Tavolo, Data>

-- 1:N-mono<Tavolo, PrenotazioneRistorante> {
-- }
